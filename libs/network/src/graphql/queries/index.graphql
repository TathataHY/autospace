query Companies(
  $where: CompanyWhereInput
  $orderBy: [CompanyOrderByWithRelationInput!]
  $cursor: CompanyWhereUniqueInput
  $take: Int
  $skip: Int
  $distinct: [CompanyScalarFieldEnum!]
) {
  companies(
    where: $where
    orderBy: $orderBy
    cursor: $cursor
    take: $take
    skip: $skip
    distinct: $distinct
  ) {
    createdAt
    description
    displayName
    id
    updatedAt
    garages {
      id
    }
    managers {
      uid
    }
  }
}

query GetAuthProvider($uid: String!) {
  getAuthProvider(uid: $uid) {
    uid
    type
  }
}

query SearchGarages(
  $dateFilter: DateFilterInput!
  $locationFilter: LocationFilterInput!
  $slotsFilter: SlotWhereInput
  $garageFilter: GarageFilter
) {
  searchGarages(
    dateFilter: $dateFilter
    locationFilter: $locationFilter
    slotsFilter: $slotsFilter
    garageFilter: $garageFilter
  ) {
    id
    address {
      latitude
      longitude
      address
    }
    images
    displayName
    availableSlots(dateFilter: $dateFilter, slotsFilter: $slotsFilter) {
      pricePerHour
      type
      count
    }
    verification {
      verified
    }
  }
}

query MyCompany {
  myCompany {
    id
    garages {
      displayName
      id
      description
      address {
        id
        address
        latitude
        longitude
      }
    }
    createdAt
    displayName
  }
}

query Garages(
  $skip: Int
  $take: Int
  $cursor: GarageWhereUniqueInput
  $orderBy: [GarageOrderByWithRelationInput!]
  $where: GarageWhereInput
) {
  garages(
    skip: $skip
    take: $take
    cursor: $cursor
    orderBy: $orderBy
    where: $where
  ) {
    id
    displayName
    description
    images
    verification {
      verified
    }
    address {
      id
      latitude
      longitude
      address
    }
    slotCounts {
      type
      count
    }
  }

  garagesCount(where: $where) {
    count
  }
}

fragment ValetFields on Valet {
  image
  uid
  displayName
}

fragment BookingFields on Booking {
  id
  pricePerHour
  endTime
  startTime
  vehicleNumber
  passcode
  status
  bookingTimeline {
    status
    timestamp
  }
  valetAssignment {
    pickupValet {
      ...ValetFields
    }
    returnValet {
      ...ValetFields
    }
  }
  slot {
    displayName
    garage {
      images
      address {
        address
        latitude
        longitude
      }
    }
  }
}

query BookingsForCustomer(
  $skip: Int
  $take: Int
  $cursor: BookingWhereUniqueInput
  $orderBy: [BookingOrderByWithRelationInput!]
  $where: BookingWhereInput
  $distinct: [BookingScalarFieldEnum!]
) {
  bookingsForCustomer(
    skip: $skip
    take: $take
    cursor: $cursor
    orderBy: $orderBy
    where: $where
    distinct: $distinct
  ) {
    ...BookingFields
  }

  bookingsCount(where: $where) {
    count
  }
}

query BookingsForGarage(
  $skip: Int
  $take: Int
  $cursor: BookingWhereUniqueInput
  $orderBy: [BookingOrderByWithRelationInput!]
  $where: BookingWhereInput
  $distinct: [BookingScalarFieldEnum!]
) {
  bookingsForGarage(
    skip: $skip
    take: $take
    cursor: $cursor
    orderBy: $orderBy
    where: $where
    distinct: $distinct
  ) {
    ...BookingFields
  }

  bookingsCount(where: $where) {
    count
  }
}

query ValetMe {
  valetMe {
    uid
    companyId
  }
}

query AdminMe {
  adminMe {
    uid
  }
}

query companyValets(
  $distinct: [ValetScalarFieldEnum!]
  $skip: Int
  $take: Int
  $cursor: ValetWhereUniqueInput
  $orderBy: [ValetOrderByWithRelationInput!]
  $where: ValetWhereInput
) {
  companyValets(
    distinct: $distinct
    skip: $skip
    take: $take
    cursor: $cursor
    orderBy: $orderBy
    where: $where
  ) {
    displayName
    uid
    createdAt
    updatedAt
    companyId
    image
    licenceID
  }

  companyValetsTotal(where: $where)
}

query valetPickups($skip: Int, $take: Int) {
  valetPickups(skip: $skip, take: $take) {
    id
    vehicleNumber
    valetAssignment {
      pickupLat
      pickupLng
      pickupValetId
    }
    startTime
    endTime
    slot {
      garage {
        address {
          latitude
          longitude
        }
      }
    }
  }
  valetPickupsTotal
}

query valetDrops($skip: Int, $take: Int) {
  valetDrops(skip: $skip, take: $take) {
    id
    vehicleNumber
    startTime
    endTime
    valetAssignment {
      returnLat
      returnLng
      returnValetId
    }
    slot {
      garage {
        address {
          latitude
          longitude
        }
      }
    }
  }
  valetDropsTotal
}

fragment ValetBookingFields on Booking {
  id
  vehicleNumber
  passcode
  status
  startTime
  endTime
  slot {
    garage {
      address {
        latitude
        longitude
      }
    }
  }
}

query myPickupTrips(
  $distinct: [BookingScalarFieldEnum!]
  $skip: Int
  $take: Int
  $orderBy: [BookingOrderByWithRelationInput!]
  $where: BookingWhereInput
) {
  bookingsForValet(
    distinct: $distinct
    skip: $skip
    take: $take
    orderBy: $orderBy
    where: $where
  ) {
    ...ValetBookingFields
    valetAssignment {
      pickupLat
      pickupLng
      pickupValetId
    }
  }
  bookingsCount(where: $where) {
    count
  }
}

query myDropTrips(
  $distinct: [BookingScalarFieldEnum!]
  $skip: Int
  $take: Int
  $orderBy: [BookingOrderByWithRelationInput!]
  $where: BookingWhereInput
) {
  bookingsForValet(
    distinct: $distinct
    skip: $skip
    take: $take
    orderBy: $orderBy
    where: $where
  ) {
    ...ValetBookingFields
    valetAssignment {
      returnLat
      returnLng
      returnValetId
    }
  }
  bookingsCount(where: $where) {
    count
  }
}

query admins(
  $distinct: [AdminScalarFieldEnum!]
  $skip: Int
  $take: Int
  $cursor: AdminWhereUniqueInput
  $orderBy: [AdminOrderByWithRelationInput!]
  $where: AdminWhereInput
) {
  admins(
    distinct: $distinct
    skip: $skip
    take: $take
    cursor: $cursor
    orderBy: $orderBy
    where: $where
  ) {
    uid
    updatedAt
    user {
      name
    }
    createdAt
    verificationsCount
  }
  adminsCount(where: $where)
}
